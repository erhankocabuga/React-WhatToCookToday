{"version":3,"sources":["components/Header.js","general/AppSettings.js","App.js","index.js"],"names":["Header","props","className","isGetButtonClicked","href","onClick","onBringButtonClick","AppSettings","apis","randomRecipe","App","useState","meal","setMeal","isTopButtonVisible","setIsTopButtonVisible","setIsGetButtonClicked","getRandomRecipe","a","axios","data","meals","ingredientList","i","measure","ingredient","trim","length","push","ingredients","checkTopButtonVisibility","window","pageYOffset","useEffect","addEventListener","Fragment","strMeal","src","strMealThumb","strArea","strCategory","dangerouslySetInnerHTML","__html","strInstructions","replace","strTags","strYoutube","split","frameBorder","mealHtml","scrollTo","top","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd9de128.chunk.js","sourcesContent":["function Header(props) {\r\n    return (\r\n        <header className=\"masthead bg-primary text-white text-center\">\r\n            <div className=\"container d-flex align-items-center flex-column\">\r\n            <h2 className=\"page-section-heading text-center text-uppercase text-white\">Want an idea?</h2>\r\n            <div className=\"divider-custom divider-light\">\r\n                <div className=\"divider-custom-line\"></div>\r\n                <div className=\"divider-custom-icon\"><i className=\"fas fa-star\"></i></div>\r\n                <div className=\"divider-custom-line\"></div>\r\n            </div>\r\n            <p className=\"masthead-subheading font-weight-light mb-0\">You decided to cook at home and have no idea what to do? No problem, click the button and start get the suggestions.</p>\r\n            { props.isGetButtonClicked && <div className=\"text-center mt-4\">\r\n                <a className=\"btn btn-xl btn-outline-light\" href=\"#\" onClick={props.onBringButtonClick}>\r\n                    <i className=\"fas fa-cookie-bite me-2\"></i>\r\n                    Bring\r\n                </a>\r\n            </div> }\r\n            </div>\r\n        </header>\r\n    ); \r\n};\r\n\r\nexport default Header;","const AppSettings = {\r\n    apis: {\r\n        randomRecipe: `https://www.themealdb.com/api/json/v1/1/random.php`\r\n    }\r\n};\r\n\r\nexport default AppSettings;","import \"./App.css\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport AppSettings from \"./general/AppSettings\";\n\nfunction App() {\n    const [ meal, setMeal ] = useState(null);\n    const [ isTopButtonVisible, setIsTopButtonVisible ] = useState(false);\n    const [ isGetButtonClicked, setIsGetButtonClicked ] = useState(false);\n\n    async function getRandomRecipe() {\n      setIsGetButtonClicked(true);\n      const randomRecipe = await axios(AppSettings.apis.randomRecipe);\n      let meal = randomRecipe.data.meals[0];\n      let ingredientList = [];\n      for (let i = 0; i < 20; i++) {\n          let measure = meal[`strMeasure${i}`];\n          let ingredient = meal[`strIngredient${i}`];\n\n          measure &&\n              measure.trim().length &&\n              ingredientList.push(`${measure} ${ingredient}`);\n      }\n\n      meal.ingredients = ingredientList;\n      setMeal(meal);\n    };\n\n    const checkTopButtonVisibility = () => {\n      setIsTopButtonVisible(window.pageYOffset > 450);\n    };\n\n    const goTopTheTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    };\n\n    const mealHtml = meal => {\n      return (\n        <div>\n          <h2 className=\"page-section-heading text-center text-uppercase text-secondary mb-0\">{meal.strMeal}</h2> \n            <div className=\"divider-custom\">\n              <div className=\"divider-custom-line\"></div>\n              <div className=\"divider-custom-icon\"><i className=\"fas fa-star\"></i></div>\n              <div className=\"divider-custom-line\"></div>\n            </div>\n      \n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-12 col-lg-6 pb-2\">\n                <img className=\"img-fluid\" src={meal.strMealThumb} />\n              </div>\n              <div className=\"col-md-12 col-lg-6 pb-4\">\n                <p className=\"card-text\"><strong>Area:</strong> {meal.strArea}<br />\n                <strong>Category:</strong> {meal.strCategory}</p> \n                <p className=\"card-text\" dangerouslySetInnerHTML={{ __html: meal.strInstructions.replace(/\\n/g, '<br />')}}></p>\n              </div>\n              <div className=\"col-12\">\n                { meal.strTags &&\n                  <div className=\"card-footer\">\n                    <small className=\"text-muted\">Tags: {meal.strTags.replace(/,/g, ', ')}</small>\n                  </div> }\n              </div>\n            </div>\n        \n            <div className=\"row justify-content-center\">\n                { meal.strYoutube && (<div className=\"video-container\">\n                  <h2 className=\"page-section-heading text-center text-uppercase text-secondary mb-0\">Video of {meal.strMeal}</h2>\n                        <div className=\"divider-custom\">\n                            <div className=\"divider-custom-line\"></div>\n                            <div className=\"divider-custom-icon\"><i className=\"fas fa-star\"></i></div>\n                            <div className=\"divider-custom-line\"></div>\n                        </div>  \n                        <div className=\"embed-container\"><iframe src={`https://www.youtube.com/embed/${meal.strYoutube.split('=')[1]}`} frameBorder=\"0\"></iframe></div>\n                        </div>)}\n              </div>\n          </div>\n      );\n    };\n\n    useEffect(() => {\n      window.addEventListener('scroll', checkTopButtonVisibility);\n    }, []);\n  \n    return (\n      <React.Fragment>\n        <Header onBringButtonClick={getRandomRecipe} isGetButtonClicked={isGetButtonClicked} />\n        <section className=\"page-section\">\n            <div className=\"container\">\n              { !isGetButtonClicked && <div className=\"text-center mt-4\">\n                    <a className=\"btn btn-xl btn btn-primary\" href=\"#\" onClick={getRandomRecipe}>\n                        <i className=\"fas fa-cookie-bite me-2\"></i>\n                        Bring\n                    </a>\n                </div> }\n\n              { meal && mealHtml(meal) }\n              </div> \n        </section> \n        { isTopButtonVisible && <div className=\"scroll-to-top\" onClick={goTopTheTop}>\n          <a className=\"btn btn-outline-dark btn-social mx-1\" href=\"#\"><i className=\"fas fa-fw fa-arrow-up\"></i></a>\n        </div>}\n      </React.Fragment>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}